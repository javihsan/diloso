// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  __View.LocalListAdminView = (function(_super) {
    __extends(LocalListAdminView, _super);

    function LocalListAdminView() {
      _ref = LocalListAdminView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LocalListAdminView.prototype.container = "section#admin article#list-local ul";

    LocalListAdminView.prototype.template_url = "/web/templates/localListAdmin.mustache";

    LocalListAdminView.prototype.events = {
      "doubleTap li": "onDoubleTap"
    };

    LocalListAdminView.prototype.onSingleTap = function(event) {
      __FacadeCore.Cache_remove(appName + "localNew");
      __FacadeCore.Cache_set(appName + "localNew", this.model);
      return __FacadeCore.Router_section("newLocal");
    };

    LocalListAdminView.prototype.onDoubleTap = function(event) {
      if (__FacadeCore.isDoubleTap(event)) {
        return this.onEnabled(event);
      }
    };

    LocalListAdminView.prototype.onEnabled = function(event) {
      var dataAccept, dataCancel, dataConfirm, _this;

      _this = this;
      dataAccept = {
        icon: 'checkmark',
        label: 'Accept',
        callback: function() {
          return _this.onEnabledConfirm(event);
        }
      };
      dataCancel = {
        icon: 'checkmark',
        label: 'Cancel',
        callback: function() {
          return {};
        }
      };
      dataConfirm = {
        icon: 'user',
        title: findLangTextElement("label.notification.enabledLocal.title"),
        description: findLangTextElement("label.notification.enabledLocal.text"),
        accept: dataAccept,
        cancel: dataCancel
      };
      return Lungo.Notification.confirm(dataConfirm);
    };

    LocalListAdminView.prototype.onEnabledConfirm = function(event) {
      var data, url;

      url = "http://" + appHost + "/local/admin/enabled";
      data = {
        id: this.model.locId
      };
      return $$.put(url, data, function() {
        return __Controller.LocalListAdmin.loadLocal(event);
      });
    };

    return LocalListAdminView;

  })(Monocle.View);

}).call(this);
