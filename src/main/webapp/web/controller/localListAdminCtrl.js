// Generated by CoffeeScript 1.6.2
(function() {
  var LocalListAdminCtrl, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  LocalListAdminCtrl = (function(_super) {
    __extends(LocalListAdminCtrl, _super);

    function LocalListAdminCtrl() {
      _ref = LocalListAdminCtrl.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LocalListAdminCtrl.prototype.events = {
      "load article#list-local": "loadLocal",
      "singleTap a[data-action=new]": "onNewLocal"
    };

    LocalListAdminCtrl.prototype.elements = {
      "#list-local": "listLocal",
      "#header_list_text": "header"
    };

    LocalListAdminCtrl.prototype.onNewLocal = function(event) {
      if (this.listLocal.hasClass("active")) {
        return __FacadeCore.Router_section("newLocal");
      }
    };

    LocalListAdminCtrl.prototype.loadLocal = function(event) {
      var data, url, _this;

      this.header.html(AppAdmin.firmDomain + " - " + findLangTextElement("label.aside.locals"));
      Lungo.Element.loading("#list-local ul", "black");
      url = "http://" + appHost + "/local/admin/list";
      data = {
        domain: AppAdmin.firmDomain
      };
      _this = this;
      return $$.json(url, data, function(response) {
        return _this.showLocal(response);
      });
    };

    LocalListAdminCtrl.prototype.showLocal = function(response) {
      var locEnabled, local, localAux, result, textsTemplates, view, _i, _len, _results;

      if (response.length > 0) {
        result = Lungo.Core.toArray(response);
        result = Lungo.Core.orderByProperty(result, "locName", "asc");
        this.listLocal.children().empty();
        textsTemplates = {
          enabled: findLangTextElement("form.enabled")
        };
        _results = [];
        for (_i = 0, _len = result.length; _i < _len; _i++) {
          localAux = result[_i];
          locEnabled = false;
          textsTemplates = {
            enabled: findLangTextElement("form.closed")
          };
          if (localAux.enabled === 1) {
            locEnabled = true;
            textsTemplates.enabled = findLangTextElement("form.enabled");
          }
          local = new __Model.Local({
            enabled: locEnabled,
            locId: localAux.id,
            locName: localAux.locName,
            locLocation: localAux.locLocation,
            texts: textsTemplates
          });
          view = new __View.LocalListAdminView({
            model: local
          });
          _results.push(view.append(local));
        }
        return _results;
      } else {
        this.listLocal.children().empty();
        return Lungo.Notification.success(findLangTextElement("label.notification.noData.title"), findLangTextElement("label.notification.noData.text"), null, 3);
      }
    };

    return LocalListAdminCtrl;

  })(Monocle.Controller);

  __Controller.LocalListAdmin = new LocalListAdminCtrl("section#admin");

}).call(this);
